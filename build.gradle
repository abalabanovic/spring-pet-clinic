plugins {
  id 'java'
  id 'org.springframework.boot' version '3.2.0'
  id 'io.spring.dependency-management' version '1.1.4'
  id 'org.graalvm.buildtools.native' version '0.9.28'
  id 'io.spring.javaformat' version '0.0.41'
  id "io.spring.nohttp" version "0.0.11"
  id 'pl.allegro.tech.build.axion-release' version '1.15.1'
  id 'maven-publish'
}

apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: 'io.spring.javaformat'

gradle.startParameter.excludedTaskNames += [ "checkFormatAot", "checkFormatAotTest" ]

group = 'org.springframework.samples'
// axion-release versioning
// version = scmVersion.version
version = "4.0.0"

java {
  sourceCompatibility = JavaVersion.VERSION_17
}

repositories {
  mavenCentral()
}

ext.webjarsFontawesomeVersion = "4.7.0"
ext.webjarsBootstrapVersion = "5.3.2"

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-cache'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'javax.cache:cache-api'
  implementation 'jakarta.xml.bind:jakarta.xml.bind-api'
  runtimeOnly 'org.springframework.boot:spring-boot-starter-actuator'
  runtimeOnly "org.webjars.npm:bootstrap:${webjarsBootstrapVersion}"
  runtimeOnly "org.webjars.npm:font-awesome:${webjarsFontawesomeVersion}"
  runtimeOnly 'com.github.ben-manes.caffeine:caffeine'
  runtimeOnly 'com.h2database:h2'
  runtimeOnly 'com.mysql:mysql-connector-j'
  runtimeOnly 'org.postgresql:postgresql'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.boot:spring-boot-testcontainers'
  testImplementation 'org.springframework.boot:spring-boot-docker-compose'
  testImplementation 'org.testcontainers:junit-jupiter'
  testImplementation 'org.testcontainers:mysql'
  checkstyle 'io.spring.javaformat:spring-javaformat-checkstyle:0.0.41'
  checkstyle 'com.puppycrawl.tools:checkstyle:10.12.5'
}

tasks.named('test') {
  useJUnitPlatform()
}

checkstyle {
  configDirectory = project.file('src/checkstyle')
  configFile = file('src/checkstyle/nohttp-checkstyle.xml')
}

checkstyleNohttp {
  configDirectory = project.file('src/checkstyle')
  configFile = file('src/checkstyle/nohttp-checkstyle.xml')
}

publishing {

      publications {

            mavenJava(MavenPublication) {

                  from components.java
            }
      }

      repositories {

              maven {
		
                  url 'http://localhost:8081/repository/maven-releases'
		  allowInsecureProtocol = true
                  credentials {
                      username = 'admin' 
                      password = 'Enter password here'

                  }
              }


      }

}


task customTask(dependsOn: 'build') {

	doLast{

	// need to run firefox command as a user not root
	def command = "sudo -u osboxes bash -c 'firefox build/reports/tests/test/index.html'"

      exec {

	commandLine 'bash', '-c', command 

	}

  }
}

tasks.named("formatMain").configure { dependsOn("checkstyleMain") }
tasks.named("formatMain").configure { dependsOn("checkstyleNohttp") }

tasks.named("formatTest").configure { dependsOn("checkstyleTest") }
tasks.named("formatTest").configure { dependsOn("checkstyleNohttp") }

checkstyleAot.enabled = false
checkstyleAotTest.enabled = false

checkFormatAot.enabled = false
checkFormatAotTest.enabled = false

formatAot.enabled = false
formatAotTest.enabled = false
